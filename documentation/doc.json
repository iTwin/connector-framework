{
  "id": 0,
  "name": "@itwin/connector-framework",
  "kind": 1,
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "Args",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 49,
          "name": "HubArgs",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Arguments specific to iModelHub used in a connector job"
          },
          "children": [
            {
              "id": 50,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 107,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 51,
                  "name": "new HubArgs",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 52,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 41,
                        "name": "HubArgsProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 49,
                    "name": "HubArgs"
                  }
                }
              ]
            },
            {
              "id": 53,
              "name": "briefcaseFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 96,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 42,
                "name": "HubArgsProps.briefcaseFile"
              }
            },
            {
              "id": 54,
              "name": "briefcaseId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 97,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "implementationOf": {
                "type": "reference",
                "id": 43,
                "name": "HubArgsProps.briefcaseId"
              }
            },
            {
              "id": 58,
              "name": "clientConfig",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 101,
                  "character": 9
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "ElectronMainAuthorizationConfiguration",
                "package": "@itwin/electron-authorization",
                "name": "ElectronMainAuthorizationConfiguration"
              }
            },
            {
              "id": 63,
              "name": "doInteractiveSignIn",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 105,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false",
              "implementationOf": {
                "type": "reference",
                "id": 48,
                "name": "HubArgsProps.doInteractiveSignIn"
              }
            },
            {
              "id": 56,
              "name": "iModelGuid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 99,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 45,
                "name": "HubArgsProps.iModelGuid"
              }
            },
            {
              "id": 55,
              "name": "projectGuid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 98,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 44,
                "name": "HubArgsProps.projectGuid"
              }
            },
            {
              "id": 57,
              "name": "region",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 100,
                  "character": 9
                }
              ],
              "type": {
                "type": "reference",
                "id": 40,
                "name": "ConnectRegion"
              },
              "defaultValue": "\"0\"",
              "implementationOf": {
                "type": "reference",
                "id": 46,
                "name": "HubArgsProps.region"
              }
            },
            {
              "id": 60,
              "name": "tokenCallback",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 104,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 61,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 62,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 59,
              "name": "tokenCallbackUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 103,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 47,
                "name": "HubArgsProps.tokenCallbackUrl"
              }
            },
            {
              "id": 64,
              "name": "isValid",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 118,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 65,
                  "name": "isValid",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "name": "Validatable.isValid"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "name": "Validatable.isValid"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                50
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                53,
                54,
                58,
                63,
                56,
                55,
                57,
                60,
                59
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                64
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 94,
              "character": 13
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "id": 41,
              "name": "HubArgsProps"
            },
            {
              "type": "reference",
              "name": "Validatable"
            }
          ]
        },
        {
          "id": 19,
          "name": "JobArgs",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Arguments specific to a connector job"
          },
          "children": [
            {
              "id": 20,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 54,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 21,
                  "name": "new JobArgs",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 22,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 6,
                        "name": "JobArgsProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 19,
                    "name": "JobArgs"
                  }
                }
              ]
            },
            {
              "id": 26,
              "name": "dbType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 44,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "briefcase"
                  },
                  {
                    "type": "literal",
                    "value": "snapshot"
                  },
                  {
                    "type": "literal",
                    "value": "standalone"
                  }
                ]
              },
              "defaultValue": "\"briefcase\"",
              "implementationOf": {
                "type": "reference",
                "id": 10,
                "name": "JobArgsProps.dbType"
              }
            },
            {
              "id": 30,
              "name": "doDetectDeletedElements",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 48,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 29,
              "name": "errorFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 47,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 14,
                "name": "JobArgsProps.errorFile"
              }
            },
            {
              "id": 27,
              "name": "issuesDbFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 45,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 11,
                "name": "JobArgsProps.issuesDbFile"
              }
            },
            {
              "id": 28,
              "name": "loggerConfigJSONFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 46,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 12,
                "name": "JobArgsProps.loggerConfigJSONFile"
              }
            },
            {
              "id": 34,
              "name": "moreArgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 52,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 35,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": {
                    "id": 36,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 37,
                        "name": "otherArg",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              },
              "implementationOf": {
                "type": "reference",
                "id": 15,
                "name": "JobArgsProps.moreArgs"
              }
            },
            {
              "id": 25,
              "name": "revisionHeader",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 43,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"JSFWK\"",
              "implementationOf": {
                "type": "reference",
                "id": 9,
                "name": "JobArgsProps.revisionHeader"
              }
            },
            {
              "id": 23,
              "name": "source",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 41,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 7,
                "name": "JobArgsProps.source"
              }
            },
            {
              "id": 24,
              "name": "stagingDir",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 42,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "...",
              "implementationOf": {
                "type": "reference",
                "id": 8,
                "name": "JobArgsProps.stagingDir"
              }
            },
            {
              "id": 33,
              "name": "synchConfigFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 51,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 13,
                "name": "JobArgsProps.synchConfigFile"
              }
            },
            {
              "id": 32,
              "name": "updateDbProfile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 50,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 31,
              "name": "updateDomainSchemas",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 49,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 38,
              "name": "isValid",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 66,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 39,
                  "name": "isValid",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "name": "Validatable.isValid"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "name": "Validatable.isValid"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                20
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                26,
                30,
                29,
                27,
                28,
                34,
                25,
                23,
                24,
                33,
                32,
                31
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                38
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 39,
              "character": 13
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "id": 6,
              "name": "JobArgsProps"
            },
            {
              "type": "reference",
              "name": "Validatable"
            }
          ]
        },
        {
          "id": 2,
          "name": "AllArgsProps",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Defines the schema of the .json argument file used to initialize ConnectorRunner"
          },
          "children": [
            {
              "id": 5,
              "name": "hubArgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 21,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 41,
                "name": "HubArgsProps"
              }
            },
            {
              "id": 4,
              "name": "jobArgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 20,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 6,
                "name": "JobArgsProps"
              }
            },
            {
              "id": 3,
              "name": "version",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 19,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "0.0.1"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                5,
                4,
                3
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 18,
              "character": 17
            }
          ]
        },
        {
          "id": 41,
          "name": "HubArgsProps",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 42,
              "name": "briefcaseFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 82,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 43,
              "name": "briefcaseId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 83,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 48,
              "name": "doInteractiveSignIn",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 88,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 45,
              "name": "iModelGuid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 85,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 44,
              "name": "projectGuid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 84,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 46,
              "name": "region",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 86,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 40,
                "name": "ConnectRegion"
              }
            },
            {
              "id": 47,
              "name": "tokenCallbackUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 87,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                42,
                43,
                48,
                45,
                44,
                46,
                47
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 81,
              "character": 17
            }
          ],
          "implementedBy": [
            {
              "type": "reference",
              "id": 49,
              "name": "HubArgs"
            }
          ]
        },
        {
          "id": 6,
          "name": "JobArgsProps",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 10,
              "name": "dbType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 28,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "briefcase"
                  },
                  {
                    "type": "literal",
                    "value": "snapshot"
                  },
                  {
                    "type": "literal",
                    "value": "standalone"
                  }
                ]
              }
            },
            {
              "id": 14,
              "name": "errorFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 32,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 11,
              "name": "issuesDbFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 29,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 12,
              "name": "loggerConfigJSONFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 30,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 15,
              "name": "moreArgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 33,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 16,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": {
                    "id": 17,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 18,
                        "name": "otherArg",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              }
            },
            {
              "id": 9,
              "name": "revisionHeader",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 27,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 7,
              "name": "source",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 25,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 8,
              "name": "stagingDir",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 26,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 13,
              "name": "synchConfigFile",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "Args.ts",
                  "line": 31,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                10,
                14,
                11,
                12,
                15,
                9,
                7,
                8,
                13
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 24,
              "character": 17
            }
          ],
          "implementedBy": [
            {
              "type": "reference",
              "id": 19,
              "name": "JobArgs"
            }
          ]
        },
        {
          "id": 40,
          "name": "ConnectRegion",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "Args.ts",
              "line": 79,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "0"
              },
              {
                "type": "literal",
                "value": "102"
              },
              {
                "type": "literal",
                "value": "103"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            49,
            19
          ]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            2,
            41,
            6
          ]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            40
          ]
        }
      ],
      "sources": [
        {
          "fileName": "Args.ts",
          "line": 5,
          "character": 0
        }
      ]
    },
    {
      "id": 66,
      "name": "BaseConnector",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 67,
          "name": "BaseConnector",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isAbstract": true
          },
          "comment": {
            "shortText": "Abstract implementation of the iTwin Connector.",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 70,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 71,
                  "name": "new BaseConnector",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 67,
                    "name": "BaseConnector"
                  }
                }
              ]
            },
            {
              "id": 111,
              "name": "issueReporter",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 97,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 112,
                  "name": "issueReporter",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "id": 129,
                        "name": "ConnectorIssueReporter"
                      }
                    ]
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 113,
                  "name": "issueReporter",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 114,
                      "name": "reporter",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 129,
                            "name": "ConnectorIssueReporter"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 115,
              "name": "jobSubject",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 105,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 116,
                  "name": "jobSubject",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Subject",
                    "package": "@itwin/core-backend",
                    "name": "Subject"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 117,
                  "name": "jobSubject",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 118,
                      "name": "subject",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "Subject",
                        "package": "@itwin/core-backend",
                        "name": "Subject"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 107,
              "name": "synchronizer",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 87,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 108,
                  "name": "synchronizer",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 390,
                    "name": "Synchronizer"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 109,
                  "name": "synchronizer",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 110,
                      "name": "sync",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 390,
                        "name": "Synchronizer"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 119,
              "name": "getApplicationId",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 115,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 120,
                  "name": "getApplicationId",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 121,
              "name": "getApplicationVersion",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 116,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 122,
                  "name": "getApplicationVersion",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 123,
              "name": "getConnectorName",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 117,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 124,
                  "name": "getConnectorName",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 125,
              "name": "getDataChangesDescription",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 120,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 126,
                  "name": "getDataChangesDescription",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the description for data changeset. If method is undefined, \"Data changes\" is used for the description."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 104,
              "name": "getJobSubjectName",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 83,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 105,
                  "name": "getJobSubjectName",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the name to be used for the job subject. This only needs to be overridden if the connector supports multiple files per channel, in which case it must be overridden."
                  },
                  "parameters": [
                    {
                      "id": 106,
                      "name": "sourcePath",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 82,
              "name": "importDefinitions",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 42,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 83,
                  "name": "importDefinitions",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Import any elements that belong in a DefinitionModel (Categories, LineStyles, Materials, etc).  This includes elements necessary for all\nimodels created by this connector as well as any that are unique to this source data. Called in the [Repository channel]($docs/learning/backend/Channel)."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 87,
              "name": "importDomainSchema",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 48,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 88,
                  "name": "importDomainSchema",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Import schema(s) that are specific to this particular source, in addition to the previously imported domain schema(s). Called in the [Repository channel]($docs/learning/backend/Channel)."
                  },
                  "parameters": [
                    {
                      "id": 89,
                      "name": "requestContext",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 84,
              "name": "importDynamicSchema",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 45,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 85,
                  "name": "importDynamicSchema",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Import schema(s) that every iModel synchronized by this connector will use. Called in the [Repository channel]($docs/learning/backend/Channel)."
                  },
                  "parameters": [
                    {
                      "id": 86,
                      "name": "requestContext",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 77,
              "name": "initializeJob",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 32,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 78,
                  "name": "initializeJob",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "This is only called the first time this source data is synchronized.  Allows the connector to perform any steps after the Job Subject has been created.  It\nmust call synchronizer.recordDocument on the source data. Called in the [Repository channel]($docs/learning/backend/Channel)."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 75,
              "name": "onOpenIModel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 25,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 76,
                  "name": "onOpenIModel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "If the connector needs to perform any steps once the iModel has been opened"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "BentleyStatus",
                        "package": "@itwin/core-bentley",
                        "name": "BentleyStatus"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 79,
              "name": "openSourceData",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 37,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 80,
                  "name": "openSourceData",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The source data can be an actual source file on disk (json, csv, xml, etc), a data dump of a native source (IFC), a URL for a rest API, etc.\nThe connector creates a connection to this source data and performs any steps necessary before reading. Called in the [Repository channel]($docs/learning/backend/Channel)."
                  },
                  "parameters": [
                    {
                      "id": 81,
                      "name": "source",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 92,
              "name": "reportError",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 57,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 93,
                  "name": "reportError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Create error file with the supplied information for debugging reasons. A default implementation that creates a file at\nthe defined output directory called \"SyncError.json\" will be used if you do not provide one for some errors in the Synchronize function.\nOverriding with your own reportError function is done the same way, but you must include the \"Override\" keyword in the function signature\nShould be called in other implemented functions if you wish for those to output error reports"
                  },
                  "parameters": [
                    {
                      "id": 94,
                      "name": "dir",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 95,
                      "name": "description",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 96,
                      "name": "systemName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 97,
                      "name": "systemPhase",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 98,
                      "name": "category",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 99,
                      "name": "canUserFix",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 100,
                      "name": "descriptionKey",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 101,
                      "name": "kbArticleLink",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 102,
              "name": "supportsMultipleFilesPerChannel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 78,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 103,
                  "name": "supportsMultipleFilesPerChannel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "A connector can operate in one of two ways with regards to source files and channels:\nI.\t1:1 - Each source file gets its own distinct channel (this is more common)\nII.\tn:1 – A connector can map multiple files into a single channel (this is rare)\nIn the case of #2, it is up to the connector to supply the jobSubject name.\nSee [Channels]($docs/learning/backend/Channel) for an explanation of the concept of channels."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 90,
              "name": "updateExistingData",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isAbstract": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 51,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 91,
                  "name": "updateExistingData",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Convert the source data to BIS and insert into the iModel.  Use the Synchronizer to determine whether an item is new, changed, or unchanged. Called in the [connector's private channel]($docs/learning/backend/Channel)."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 68,
              "name": "create",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "BaseConnector.ts",
                  "line": 20,
                  "character": 22
                }
              ],
              "signatures": [
                {
                  "id": 69,
                  "name": "create",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "BaseConnector"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                70
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                111,
                115,
                107
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                119,
                121,
                123,
                125,
                104,
                82,
                87,
                84,
                77,
                75,
                79,
                92,
                102,
                90,
                68
              ]
            }
          ],
          "sources": [
            {
              "fileName": "BaseConnector.ts",
              "line": 14,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            67
          ]
        }
      ],
      "sources": [
        {
          "fileName": "BaseConnector.ts",
          "line": 5,
          "character": 0
        }
      ]
    },
    {
      "id": 128,
      "name": "ConnectorIssueReporter",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 129,
          "name": "ConnectorIssueReporter",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Abstract implementation of the Issue Reporter",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 168,
              "name": "getReportPath",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 23,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 169,
                  "name": "getReportPath",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the path to the report file"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 170,
              "name": "publishReport",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 26,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 171,
                  "name": "publishReport",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a JSON report file to be uploaded by the orchestrator"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 130,
              "name": "recordIgnoredElements",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 131,
                  "name": "recordIgnoredElements",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records element that have not been visited during the running of the connector"
                  },
                  "parameters": [
                    {
                      "id": 132,
                      "name": "repositoryLinkId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 133,
                      "name": "ignoredElementIdList",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 155,
              "name": "recordReferenceFileInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 20,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 156,
                  "name": "recordReferenceFileInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records additional files for a connector job"
                  },
                  "parameters": [
                    {
                      "id": 157,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 158,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 159,
                      "name": "uniqueName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 160,
                      "name": "itemType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 161,
                      "name": "dataSource",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 162,
                      "name": "downloadUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 163,
                      "name": "state",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 164,
                      "name": "failureReason",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 165,
                      "name": "exists",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 166,
                      "name": "fileSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 167,
                      "name": "foundByConnector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 142,
              "name": "recordSourceFileInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 17,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 143,
                  "name": "recordSourceFileInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records file information for a connector job. Should be called by the orchestrator"
                  },
                  "parameters": [
                    {
                      "id": 144,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 145,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 146,
                      "name": "uniqueName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 147,
                      "name": "itemType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 148,
                      "name": "dataSource",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 149,
                      "name": "state",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 150,
                      "name": "failureReason",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 151,
                      "name": "exists",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 152,
                      "name": "fileSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 153,
                      "name": "foundByConnector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 154,
                      "name": "downloadUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 134,
              "name": "reportIssue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorIssueReporter.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 135,
                  "name": "reportIssue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Reports a generic issue encountered by the connector. The sourceId here will determine what file the issue corresponds to"
                  },
                  "parameters": [
                    {
                      "id": 136,
                      "name": "ecInstanceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 137,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 138,
                      "name": "level",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "Error"
                          },
                          {
                            "type": "literal",
                            "value": "Warning"
                          }
                        ]
                      }
                    },
                    {
                      "id": 139,
                      "name": "category",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 140,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 141,
                      "name": "type",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                168,
                170,
                130,
                155,
                142,
                134
              ]
            }
          ],
          "sources": [
            {
              "fileName": "ConnectorIssueReporter.ts",
              "line": 9,
              "character": 17
            }
          ],
          "implementedBy": [
            {
              "type": "reference",
              "id": 268,
              "name": "SqliteIssueReporter"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            129
          ]
        }
      ],
      "sources": [
        {
          "fileName": "ConnectorIssueReporter.ts",
          "line": 9,
          "character": 0
        }
      ]
    },
    {
      "id": 172,
      "name": "ConnectorRunner",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 173,
          "name": "ConnectorRunner",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 180,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 31,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 181,
                  "name": "new ConnectorRunner",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error when jobArgs or/and hubArgs are malformated or contain invalid arguments\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 182,
                      "name": "jobArgs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 19,
                        "name": "JobArgs"
                      }
                    },
                    {
                      "id": 183,
                      "name": "hubArgs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 49,
                        "name": "HubArgs"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 173,
                    "name": "ConnectorRunner"
                  }
                }
              ]
            },
            {
              "id": 207,
              "name": "connector",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 147,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 208,
                  "name": "connector",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 67,
                    "name": "BaseConnector"
                  }
                }
              ]
            },
            {
              "id": 205,
              "name": "db",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 141,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 206,
                  "name": "db",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "qualifiedName": "IModelDb",
                    "package": "@itwin/core-backend",
                    "name": "IModelDb"
                  }
                }
              ]
            },
            {
              "id": 198,
              "name": "hubArgs",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 121,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 199,
                  "name": "hubArgs",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 49,
                    "name": "HubArgs"
                  }
                }
              ]
            },
            {
              "id": 200,
              "name": "issueReporter",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 127,
                  "character": 13
                }
              ],
              "setSignature": [
                {
                  "id": 201,
                  "name": "issueReporter",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 202,
                      "name": "reporter",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 129,
                        "name": "ConnectorIssueReporter"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 196,
              "name": "jobArgs",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 117,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 197,
                  "name": "jobArgs",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 19,
                    "name": "JobArgs"
                  }
                }
              ]
            },
            {
              "id": 203,
              "name": "jobSubjectName",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 131,
                  "character": 13
                }
              ],
              "getSignature": [
                {
                  "id": 204,
                  "name": "jobSubjectName",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 192,
              "name": "getAuthReqContext",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 94,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 193,
                  "name": "getAuthReqContext",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 194,
              "name": "getReqContext",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 104,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 195,
                  "name": "getReqContext",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 190,
              "name": "isAccessTokenExpired",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 88,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 191,
                  "name": "isAccessTokenExpired",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 218,
              "name": "recordError",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 275,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 219,
                  "name": "recordError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 220,
                      "name": "err",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 209,
              "name": "run",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 158,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 210,
                  "name": "run",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Safely executes a connector job\nThis method does not throw any errors",
                    "returns": "BentleyStatus\n"
                  },
                  "parameters": [
                    {
                      "id": 211,
                      "name": "connectorFile",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "BentleyStatus",
                        "package": "@itwin/core-bentley",
                        "name": "BentleyStatus"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 174,
              "name": "fromFile",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 57,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 175,
                  "name": "fromFile",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Generates a ConnectorRunner instance from a .json argument file",
                    "returns": "ConnectorRunner",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error when file does not exist\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 176,
                      "name": "file",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "absolute path to a .json file that stores arguments"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 173,
                    "name": "ConnectorRunner"
                  }
                }
              ]
            },
            {
              "id": 177,
              "name": "fromJSON",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true,
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "ConnectorRunner.ts",
                  "line": 71,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 178,
                  "name": "fromJSON",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Generates a ConnectorRunner instance from json body",
                    "returns": "ConnectorRunner",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error when content does not include \"jobArgs\" as key\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 179,
                      "name": "json",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "reference",
                        "id": 2,
                        "name": "AllArgsProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 173,
                    "name": "ConnectorRunner"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                180
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                207,
                205,
                198,
                200,
                196,
                203
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                192,
                194,
                190,
                218,
                209,
                174,
                177
              ]
            }
          ],
          "sources": [
            {
              "fileName": "ConnectorRunner.ts",
              "line": 17,
              "character": 13
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            173
          ]
        }
      ],
      "sources": [
        {
          "fileName": "ConnectorRunner.ts",
          "line": 5,
          "character": 0
        }
      ]
    },
    {
      "id": 367,
      "name": "Framework",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "comment": {},
      "originalName": "Synchronizer",
      "children": [
        {
          "id": 368,
          "name": "ItemState",
          "kind": 8,
          "kindString": "Enumeration",
          "flags": {},
          "comment": {
            "shortText": "The state of the given SourceItem against the iModelDb",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 371,
              "name": "Changed",
              "kind": 16,
              "kindString": "Enumeration member",
              "flags": {},
              "comment": {
                "shortText": "The SourceItem has been changed"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 23,
                  "character": 2
                }
              ],
              "defaultValue": "2"
            },
            {
              "id": 370,
              "name": "New",
              "kind": 16,
              "kindString": "Enumeration member",
              "flags": {},
              "comment": {
                "shortText": "The SourceItem is not currently in the iModelDb"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 21,
                  "character": 2
                }
              ],
              "defaultValue": "1"
            },
            {
              "id": 369,
              "name": "Unchanged",
              "kind": 16,
              "kindString": "Enumeration member",
              "flags": {},
              "comment": {
                "shortText": "The SourceItem is unchanged"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 19,
                  "character": 2
                }
              ],
              "defaultValue": "0"
            }
          ],
          "groups": [
            {
              "title": "Enumeration members",
              "kind": 16,
              "children": [
                371,
                370,
                369
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 17,
              "character": 12
            }
          ]
        },
        {
          "id": 390,
          "name": "Synchronizer",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Helper class for interacting with the iModelDb during synchronization.",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 391,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 87,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 392,
                  "name": "new Synchronizer",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 393,
                      "name": "imodel",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "IModelDb",
                        "package": "@itwin/core-backend",
                        "name": "IModelDb"
                      }
                    },
                    {
                      "id": 394,
                      "name": "_supportsMultipleFilesPerChannel",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 395,
                      "name": "_requestContext",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 390,
                    "name": "Synchronizer"
                  }
                }
              ]
            },
            {
              "id": 400,
              "name": "_requestContext",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 399,
              "name": "imodel",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isReadonly": true
              },
              "type": {
                "type": "reference",
                "qualifiedName": "IModelDb",
                "package": "@itwin/core-backend",
                "name": "IModelDb"
              }
            },
            {
              "id": 407,
              "name": "detectChanges",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 156,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 408,
                  "name": "detectChanges",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Detect if the item has changed or is new.",
                    "returns": "the results of looking in the iModelDb and comparing the existing source record, if any, with the item's current state.",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 409,
                      "name": "scope",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The scoping item"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 410,
                      "name": "sourceKind",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 411,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "the source item"
                      },
                      "type": {
                        "type": "reference",
                        "id": 375,
                        "name": "SourceItem"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 372,
                    "name": "ChangeResults"
                  }
                }
              ]
            },
            {
              "id": 442,
              "name": "detectDeletedElements",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 362,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 443,
                  "name": "detectDeletedElements",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Deletes elements from a BriefcaseDb that were previously converted but not longer exist in the source data.",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 427,
              "name": "getExternalSourceElement",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 289,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 428,
                  "name": "getExternalSourceElement",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the External Source Element associated with a repository link",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 429,
                      "name": "repositoryLink",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The repository link associated with the External Source Element"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "Element",
                        "package": "@itwin/core-backend",
                        "name": "Element"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "ExternalSourceProps",
                        "package": "@itwin/core-common",
                        "name": "ExternalSourceProps"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 430,
              "name": "getExternalSourceElementByLinkId",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 297,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 431,
                  "name": "getExternalSourceElementByLinkId",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the External Source Element associated with a repository link",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 432,
                      "name": "repositoryLinkId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The ElementId of the repository link associated with the External Source Element"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "ExternalSourceProps",
                        "package": "@itwin/core-common",
                        "name": "ExternalSourceProps"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 433,
              "name": "insertResultsIntoIModel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 317,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 434,
                  "name": "insertResultsIntoIModel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Given synchronizations results for an element (and possibly its children), insert the new element into the bim",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 435,
                      "name": "results",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The result set to insert"
                      },
                      "type": {
                        "type": "reference",
                        "id": 386,
                        "name": "SynchronizationResults"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "IModelStatus",
                    "package": "@itwin/core-bentley",
                    "name": "IModelStatus"
                  }
                }
              ]
            },
            {
              "id": 439,
              "name": "onElementSeen",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 355,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 440,
                  "name": "onElementSeen",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records that this particular element was visited during this synchronization. This information will later be used to determine which\npreviously existing elements no longer exist and should be deleted.",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 441,
                      "name": "id",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 401,
              "name": "recordDocument",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 99,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 402,
                  "name": "recordDocument",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Insert or update a RepositoryLink element to represent the source document.  Also inserts or updates an ExternalSourceAspect for provenance.",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "[[IModelError]] if a RepositoryLink for this document already exists, but there is no matching ExternalSourceAspect.\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 403,
                      "name": "scope",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The scope of the RepositoryLink's ExternalSourceAspect"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 404,
                      "name": "sourceItem",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Identifies the document. The item's version property should the last modified time of the document. The checksum property is optional. It may be a cryptographic hash of the file's contents, or some other metric that is guaranteed to change when the document changes."
                      },
                      "type": {
                        "type": "reference",
                        "id": 375,
                        "name": "SourceItem"
                      }
                    },
                    {
                      "id": 405,
                      "name": "kind",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Optional. The document kind. Defaults to \"DocumentWithBeGuid\""
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"DocumentWithBeGuid\""
                    },
                    {
                      "id": 406,
                      "name": "knownUrn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Optional. The URN of the master document. Defaults to \"\"."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"\""
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 386,
                    "name": "SynchronizationResults"
                  }
                }
              ]
            },
            {
              "id": 419,
              "name": "setExternalSourceAspect",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 264,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 420,
                  "name": "setExternalSourceAspect",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Adds or updates the external source aspect for the given source item onto the related element",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 421,
                      "name": "element",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The element to attach the ExternalSourceAspect"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "ElementProps",
                        "package": "@itwin/core-common",
                        "name": "ElementProps"
                      }
                    },
                    {
                      "id": 422,
                      "name": "itemState",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state of the source item"
                      },
                      "type": {
                        "type": "reference",
                        "id": 368,
                        "name": "ItemState"
                      }
                    },
                    {
                      "id": 423,
                      "name": "scope",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The id of the scoping element"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 424,
                      "name": "sourceItem",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Defines the source item"
                      },
                      "type": {
                        "type": "reference",
                        "id": 375,
                        "name": "SourceItem"
                      }
                    },
                    {
                      "id": 425,
                      "name": "kind",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The kind of the source item"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 426,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "IModelStatus",
                    "package": "@itwin/core-bentley",
                    "name": "IModelStatus"
                  }
                }
              ]
            },
            {
              "id": 412,
              "name": "updateIModel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 209,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 413,
                  "name": "updateIModel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Update the BIM with the results of converting an item to one or more DgnElements.\nIf the item is new or changed, the conversion writes are written to the BIM and the associated ExternalSourceAspect is updated.\nIf the item is known and unchanged, then the BIM is not updated.\nIn either case, this function will record the id of the element as having been seen.",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 414,
                      "name": "results",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 386,
                        "name": "SynchronizationResults"
                      }
                    },
                    {
                      "id": 415,
                      "name": "scope",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Id of the scoping element"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 416,
                      "name": "sourceItem",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Defines the source item"
                      },
                      "type": {
                        "type": "reference",
                        "id": 375,
                        "name": "SourceItem"
                      }
                    },
                    {
                      "id": 417,
                      "name": "kind",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The kind of the source item"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 418,
                      "name": "externalSourceElement",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "External source pointing to the Repository Link. Use getExternalSourceElement for this parameter"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "ExternalSourceProps",
                        "package": "@itwin/core-common",
                        "name": "ExternalSourceProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "IModelStatus",
                    "package": "@itwin/core-bentley",
                    "name": "IModelStatus"
                  }
                }
              ]
            },
            {
              "id": 436,
              "name": "updateResultsInIModel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 343,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 437,
                  "name": "updateResultsInIModel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Given synchronizations results for an element (and possibly its children), updates element in the bim",
                    "tags": [
                      {
                        "tag": "beta",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 438,
                      "name": "results",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The result set to insert"
                      },
                      "type": {
                        "type": "reference",
                        "id": 386,
                        "name": "SynchronizationResults"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "IModelStatus",
                    "package": "@itwin/core-bentley",
                    "name": "IModelStatus"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                391
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                400,
                399
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                407,
                442,
                427,
                430,
                433,
                439,
                401,
                419,
                412,
                436
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 82,
              "character": 13
            }
          ]
        },
        {
          "id": 372,
          "name": "ChangeResults",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "beta",
                "text": ""
              }
            ]
          },
          "children": [
            {
              "id": 373,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Id of the item, if it currently exists in the iModel"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 29,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 374,
              "name": "state",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "State of the item"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 31,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 368,
                "name": "ItemState"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                373,
                374
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 27,
              "character": 17
            }
          ]
        },
        {
          "id": 379,
          "name": "DocumentProperties",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Properties that may be assigned to a document by its home document control system",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 383,
              "name": "attributesJson",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Document attributes, in JSON format"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 62,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 385,
              "name": "changeHistoryJson",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Change history information, in Json format"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 66,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 382,
              "name": "desktopURN",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The URN to use when referring to this document from a desktop program"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 60,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 380,
              "name": "docGuid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The GUID assigned to the document"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 384,
              "name": "spatialRootTransformJson",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Spatial data transform for root document, in JSON format"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 381,
              "name": "webURN",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The URN to use when referring to this document over the Internet"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 58,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                383,
                385,
                382,
                380,
                384,
                381
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 54,
              "character": 17
            }
          ]
        },
        {
          "id": 375,
          "name": "SourceItem",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Interface for presenting an item in the source repository",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 378,
              "name": "checksum",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The optional cryptographic hash (any algorithm) of the source object's content. If defined, it must be guaranteed to change when the source object's content changes.\nThe definition and method of computing this value is known only to the source repository.  If not defined, version must be defined."
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 48,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 376,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Unique Identity of the source item (relative to its scope and kind)."
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 39,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 377,
              "name": "version",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "An optional value that is typically a version number or a pseudo version number like last modified time.\nIt will be used by the synchronization process to detect that a source object is unchanged so that computing a cryptographic hash can be avoided.\nIf present, this value must be guaranteed to change when any of the source object's content changes. If not defined, checksum must be defined"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 44,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                378,
                376,
                377
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 37,
              "character": 17
            }
          ]
        },
        {
          "id": 386,
          "name": "SynchronizationResults",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "beta",
                "text": ""
              }
            ]
          },
          "children": [
            {
              "id": 388,
              "name": "childElements",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Children of element that have been synchronized"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 74,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 386,
                  "name": "SynchronizationResults"
                }
              }
            },
            {
              "id": 387,
              "name": "elementProps",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The props of the element being synchronized"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 72,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "ElementProps",
                "package": "@itwin/core-common",
                "name": "ElementProps"
              }
            },
            {
              "id": 389,
              "name": "itemState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The state of the element"
              },
              "sources": [
                {
                  "fileName": "Synchronizer.ts",
                  "line": 76,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 368,
                "name": "ItemState"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                388,
                387,
                389
              ]
            }
          ],
          "sources": [
            {
              "fileName": "Synchronizer.ts",
              "line": 70,
              "character": 17
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Enumerations",
          "kind": 8,
          "children": [
            368
          ]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            390
          ]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            372,
            379,
            375,
            386
          ]
        }
      ],
      "sources": [
        {
          "fileName": "Synchronizer.ts",
          "line": 9,
          "character": 0
        }
      ]
    },
    {
      "id": 260,
      "name": "Logging",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "comment": {},
      "originalName": "LoggerCategory",
      "children": [
        {
          "id": 261,
          "name": "LoggerCategories",
          "kind": 8,
          "kindString": "Enumeration",
          "flags": {
            "isPublic": true
          },
          "comment": {
            "shortText": "Logger categories used by this package",
            "tags": [
              {
                "tag": "note",
                "text": "All logger categories in this package start with the `itwin-connector-framework` prefix."
              },
              {
                "tag": "see",
                "text": "[Logger]($bentley)"
              }
            ]
          },
          "children": [
            {
              "id": 262,
              "name": "Framework",
              "kind": 16,
              "kindString": "Enumeration member",
              "flags": {},
              "sources": [
                {
                  "fileName": "LoggerCategory.ts",
                  "line": 15,
                  "character": 2
                }
              ],
              "defaultValue": "\"itwin-connector.Framework\""
            }
          ],
          "groups": [
            {
              "title": "Enumeration members",
              "kind": 16,
              "children": [
                262
              ]
            }
          ],
          "sources": [
            {
              "fileName": "LoggerCategory.ts",
              "line": 14,
              "character": 12
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Enumerations",
          "kind": 8,
          "children": [
            261
          ]
        }
      ],
      "sources": [
        {
          "fileName": "LoggerCategory.ts",
          "line": 14,
          "character": 0
        }
      ]
    },
    {
      "id": 263,
      "name": "SqliteIssueReporter",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 268,
          "name": "SqliteIssueReporter",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "SQLite issue reporter. Can be provided to ConnectorRunner in setIssueReporter",
            "tags": [
              {
                "tag": "beta",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 269,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 47,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 270,
                  "name": "new SqliteIssueReporter",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 271,
                      "name": "contextId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 272,
                      "name": "iModelId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 273,
                      "name": "activityId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 274,
                      "name": "fileId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 275,
                      "name": "outputDir",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 276,
                      "name": "operationType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "NormalUpdate"
                          },
                          {
                            "type": "literal",
                            "value": "AllDocsProcessed"
                          }
                        ]
                      }
                    },
                    {
                      "id": 277,
                      "name": "filePath",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 278,
                      "name": "jobId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 279,
                      "name": "deleteReportDB",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 268,
                    "name": "SqliteIssueReporter"
                  }
                }
              ]
            },
            {
              "id": 340,
              "name": "createJsonReport",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 122,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 341,
                  "name": "createJsonReport",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 342,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 343,
                          "name": "context",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 344,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 350,
                                  "name": "activityid",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 351,
                                  "name": "briefcaseid",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "undefined"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    ]
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 348,
                                  "name": "contextid",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 349,
                                  "name": "imodelid",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 347,
                                  "name": "jobid",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "undefined"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 346,
                                  "name": "operationType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "NormalUpdate"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "AllDocsProcessed"
                                      }
                                    ]
                                  },
                                  "defaultValue": "..."
                                },
                                {
                                  "id": 345,
                                  "name": "reportType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "defaultValue": "\"detailReport\""
                                },
                                {
                                  "id": 352,
                                  "name": "timestamp",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    350,
                                    351,
                                    348,
                                    349,
                                    347,
                                    346,
                                    345,
                                    352
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 354,
                          "name": "filerecords",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          "defaultValue": "fileRecord"
                        },
                        {
                          "id": 353,
                          "name": "sourceFilesInfo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "defaultValue": "sourceFile"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            343,
                            354,
                            353
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": 355,
              "name": "getReportPath",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 223,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 356,
                  "name": "getReportPath",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the path to the report file"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 169,
                    "name": "ConnectorIssueReporter.getReportPath"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 168,
                "name": "ConnectorIssueReporter.getReportPath"
              }
            },
            {
              "id": 365,
              "name": "publishReport",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 274,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 366,
                  "name": "publishReport",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a JSON report file to be uploaded by the orchestrator"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 171,
                    "name": "ConnectorIssueReporter.publishReport"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 170,
                "name": "ConnectorIssueReporter.publishReport"
              }
            },
            {
              "id": 302,
              "name": "recordIgnoredElements",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 82,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 303,
                  "name": "recordIgnoredElements",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records element that have not been visited during the running of the connector"
                  },
                  "parameters": [
                    {
                      "id": 304,
                      "name": "repositoryLinkId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 305,
                      "name": "ignoredElementIdList",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 131,
                    "name": "ConnectorIssueReporter.recordIgnoredElements"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 130,
                "name": "ConnectorIssueReporter.recordIgnoredElements"
              }
            },
            {
              "id": 327,
              "name": "recordReferenceFileInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 113,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 328,
                  "name": "recordReferenceFileInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records additional files for a connector job"
                  },
                  "parameters": [
                    {
                      "id": 329,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 330,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 331,
                      "name": "uniqueName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 332,
                      "name": "itemType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 333,
                      "name": "dataSource",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 334,
                      "name": "downloadUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 335,
                      "name": "state",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 336,
                      "name": "failureReason",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 337,
                      "name": "exists",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 338,
                      "name": "fileSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 339,
                      "name": "foundByConnector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 156,
                    "name": "ConnectorIssueReporter.recordReferenceFileInfo"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 155,
                "name": "ConnectorIssueReporter.recordReferenceFileInfo"
              }
            },
            {
              "id": 314,
              "name": "recordSourceFileInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 101,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 315,
                  "name": "recordSourceFileInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Records file information for a connector job. Should be called by the orchestrator"
                  },
                  "parameters": [
                    {
                      "id": 316,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 317,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 318,
                      "name": "uniqueName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 319,
                      "name": "itemType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 320,
                      "name": "dataSource",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 321,
                      "name": "state",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 322,
                      "name": "failureReason",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 323,
                      "name": "exists",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 324,
                      "name": "fileSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 325,
                      "name": "foundByConnector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 326,
                      "name": "downloadUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 143,
                    "name": "ConnectorIssueReporter.recordSourceFileInfo"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 142,
                "name": "ConnectorIssueReporter.recordSourceFileInfo"
              }
            },
            {
              "id": 306,
              "name": "reportIssue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 91,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 307,
                  "name": "reportIssue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Reports a generic issue encountered by the connector. The sourceId here will determine what file the issue corresponds to"
                  },
                  "parameters": [
                    {
                      "id": 308,
                      "name": "ecInstanceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 309,
                      "name": "sourceId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 310,
                      "name": "level",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "Error"
                          },
                          {
                            "type": "literal",
                            "value": "Warning"
                          }
                        ]
                      }
                    },
                    {
                      "id": 311,
                      "name": "category",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 312,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 313,
                      "name": "type",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 135,
                    "name": "ConnectorIssueReporter.reportIssue"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 134,
                "name": "ConnectorIssueReporter.reportIssue"
              }
            },
            {
              "id": 292,
              "name": "setBriefcaseId",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 64,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 293,
                  "name": "setBriefcaseId",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 294,
                      "name": "briefcaseId",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 295,
              "name": "setPostPublishingProcessor",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 68,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 296,
                  "name": "setPostPublishingProcessor",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 297,
                      "name": "processor",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 264,
                        "name": "PostPublishingProcessor"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                269
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                340,
                355,
                365,
                302,
                327,
                314,
                306,
                292,
                295
              ]
            }
          ],
          "sources": [
            {
              "fileName": "SqliteIssueReporter.ts",
              "line": 32,
              "character": 13
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "id": 129,
              "name": "ConnectorIssueReporter"
            }
          ]
        },
        {
          "id": 264,
          "name": "PostPublishingProcessor",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "SqliteIssueReporter.ts",
              "line": 27,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 265,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "SqliteIssueReporter.ts",
                  "line": 27,
                  "character": 38
                }
              ],
              "signatures": [
                {
                  "id": 266,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 267,
                      "name": "reportPath",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            268
          ]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            264
          ]
        }
      ],
      "sources": [
        {
          "fileName": "SqliteIssueReporter.ts",
          "line": 5,
          "character": 0
        }
      ]
    },
    {
      "id": 127,
      "name": "connector-framework",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 478,
          "name": "BaseConnector",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 67
        },
        {
          "id": 480,
          "name": "ChangeResults",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 372
        },
        {
          "id": 477,
          "name": "ConnectorRunner",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 173
        },
        {
          "id": 482,
          "name": "DocumentProperties",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 379
        },
        {
          "id": 479,
          "name": "ItemState",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 368
        },
        {
          "id": 476,
          "name": "LoggerCategories",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 261
        },
        {
          "id": 481,
          "name": "SourceItem",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 375
        },
        {
          "id": 483,
          "name": "SynchronizationResults",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 386
        },
        {
          "id": 484,
          "name": "Synchronizer",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "target": 390
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [
            478,
            480,
            477,
            482,
            479,
            476,
            481,
            483,
            484
          ]
        }
      ],
      "sources": [
        {
          "fileName": "connector-framework.ts",
          "line": 5,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 2,
      "children": [
        1,
        66,
        128,
        172,
        367,
        260,
        263,
        127
      ]
    }
  ],
  "packageRoot": "\\src"
}